{"version":3,"sources":["../webpack:/pr-update-action/index.js","../webpack:/pr-update-action/node_modules/@actions/core/lib/command.js","../webpack:/pr-update-action/node_modules/@actions/core/lib/core.js","../webpack:/pr-update-action/node_modules/@actions/github/lib/context.js","../webpack:/pr-update-action/node_modules/@actions/github/lib/github.js","../webpack:/pr-update-action/node_modules/@octokit/endpoint/dist-node/index.js","../webpack:/pr-update-action/node_modules/@octokit/endpoint/node_modules/is-plain-object/dist/is-plain-object.js","../webpack:/pr-update-action/node_modules/@octokit/graphql/dist-node/index.js","../webpack:/pr-update-action/node_modules/@octokit/request-error/dist-node/index.js","../webpack:/pr-update-action/node_modules/@octokit/request/dist-node/index.js","../webpack:/pr-update-action/node_modules/@octokit/request/node_modules/is-plain-object/dist/is-plain-object.js","../webpack:/pr-update-action/node_modules/deprecation/dist-node/index.js","../webpack:/pr-update-action/node_modules/node-fetch/lib/index.js","../webpack:/pr-update-action/node_modules/once/once.js","../webpack:/pr-update-action/node_modules/universal-user-agent/dist-node/index.js","../webpack:/pr-update-action/node_modules/wrappy/wrappy.js","../webpack:/pr-update-action/node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack:/pr-update-action/external \"fs\"","../webpack:/pr-update-action/external \"http\"","../webpack:/pr-update-action/external \"https\"","../webpack:/pr-update-action/external \"os\"","../webpack:/pr-update-action/external \"path\"","../webpack:/pr-update-action/external \"stream\"","../webpack:/pr-update-action/external \"url\"","../webpack:/pr-update-action/external \"zlib\"","../webpack:/pr-update-action/webpack/bootstrap","../webpack:/pr-update-action/webpack/runtime/compat","../webpack:/pr-update-action/webpack/startup"],"names":["core","__webpack_require__","github","async","run","baseTokenRegex","RegExp","headTokenRegex","inputs","token","getInput","required","baseBranchRegex","headBranchRegex","lowercaseBranch","toLowerCase","titleTemplate","titleUpdateAction","titleInsertSpace","titleUppercaseBaseMatch","titleUppercaseHeadMatch","bodyTemplate","bodyUpdateAction","bodyNewlineCount","parseInt","bodyUppercaseBaseMatch","bodyUppercaseHeadMatch","trim","matchBaseBranch","length","matchHeadBranch","setFailed","matches","baseMatch","headMatch","baseBranchName","context","payload","pull_request","base","ref","baseBranch","info","baseMatches","match","setOutput","headBranchName","head","headBranch","headMatches","request","owner","repo","pull_number","number","upperCase","text","toUpperCase","title","processedTitleText","replace","updateTitle","prefix","startsWith","suffix","endsWith","concat","warning","body","processedBodyText","debug","updateBody","repeat","client","GitHub","response","pulls","update","status","error","message","Object","defineProperty","exports","value","os","issueCommand","command","properties","cmd","Command","process","stdout","write","toString","EOL","issue","name","CMD_STRING","[object Object]","this","cmdStr","keys","key","hasOwnProperty","val","escape","escapeData","s","__awaiter","thisArg","_arguments","P","generator","adopt","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","command_1","path","ExitCode","exportVariable","env","setSecret","secret","addPath","inputPath","delimiter","options","Error","exitCode","Failure","startGroup","endGroup","group","fn","fs_1","os_1","Context","GITHUB_EVENT_PATH","existsSync","JSON","parse","readFileSync","encoding","eventName","GITHUB_EVENT_NAME","sha","GITHUB_SHA","GITHUB_REF","workflow","GITHUB_WORKFLOW","action","GITHUB_ACTION","actor","GITHUB_ACTOR","assign","pullRequest","GITHUB_REPOSITORY","split","repository","login","__importDefault","mod","__esModule","default","__importStar","k","call","graphql_1","rest_1","prototype","opts","super","auth","graphql","defaults","headers","authorization","isPlainObject","universalUserAgent","lowercaseKeys","object","reduce","newObj","mergeDeep","forEach","removeUndefinedProperties","obj","undefined","merge","route","method","url","mergedOptions","mediaType","previews","filter","preview","includes","map","addQueryParameters","parameters","separator","test","names","q","encodeURIComponent","join","urlVariableRegex","removeNonChars","variableName","extractUrlVariableNames","a","b","omit","keysToOmit","option","encodeReserved","str","part","encodeURI","encodeUnreserved","c","charCodeAt","encodeValue","operator","isDefined","isKeyOperator","getValues","modifier","substring","push","Array","isArray","tmp","parseUrl","template","expand","bind","operators","_","expression","literal","values","indexOf","charAt","substr","variable","exec","urlVariableNames","baseUrl","omittedParameters","remainingParameters","isBinaryRequest","accept","format","previewsFromAcceptHeader","data","endpointWithDefaults","withDefaults","oldDefaults","newDefaults","DEFAULTS","endpoint","VERSION","userAgent","getUserAgent","user-agent","isObject","o","ctor","prot","constructor","GraphqlError","errors","captureStackTrace","NON_VARIABLE_OPTIONS","GHES_V3_SUFFIX_REGEX","query","parsedOptions","requestOptions","variables","request$1","newRequest","newApi","graphql$1","withCustomRequest","customRequest","_interopDefault","ex","deprecation","once","logOnce","console","warn","RequestError","statusCode","Deprecation","requestCopy","nodeFetch","requestError","getBufferResponse","arrayBuffer","fetchWrapper","stringify","fetch","redirect","keyAndValue","statusText","responseBody","contentType","get","json","catch","oldEndpoint","endpointOptions","hook","Stream","http","Url","https","zlib","Readable","BUFFER","Symbol","TYPE","Blob","blobParts","arguments","buffers","size","Number","i","element","buffer","Buffer","ArrayBuffer","isView","from","byteOffset","byteLength","String","type","buf","ab","slice","readable","_read","start","end","relativeStart","relativeEnd","Math","max","min","span","slicedBuffer","blob","defineProperties","enumerable","toStringTag","writable","configurable","FetchError","systemError","code","errno","create","convert","INTERNALS","PassThrough","Body","_this","_ref","_ref$size","_ref$timeout","timeout","isURLSearchParams","isBlob","isBuffer","disturbed","on","err","bodyUsed","consumeBody","ct","_this2","_this3","convertBody","mixIn","proto","getOwnPropertyNames","desc","getOwnPropertyDescriptor","_this4","TypeError","alloc","stream","accum","accumBytes","abort","resTimeout","setTimeout","chunk","clearTimeout","charset","res","pop","append","delete","getAll","has","set","sort","clone","instance","p1","p2","getBoundary","pipe","extractContentType","getTotalBytes","getLengthSync","_lengthRetrievers","hasKnownLength","writeToStream","dest","global","invalidTokenRegex","invalidHeaderCharRegex","validateName","validateValue","find","MAP","Headers","init","rawHeaders","raw","headerNames","headerName","iterator","pairs","pair","callback","getHeaders","_pairs$i","createHeadersIterator","entries","kind","INTERNAL","target","HeadersIteratorPrototype","index","setPrototypeOf","getPrototypeOf","_INTERNAL","len","exportNodeCompatibleHeaders","__proto__","hostHeaderKey","createHeadersLenient","INTERNALS$1","STATUS_CODES","Response","counter","ok","redirected","INTERNALS$2","parse_url","format_url","streamDestructionSupported","isRequest","input","isAbortSignal","signal","Request","parsedURL","href","inputBody","follow","compress","agent","getNodeRequestOptions","protocol","hostname","contentLengthValue","totalBytes","AbortError","PassThrough$1","resolve_url","send","destroy","emit","aborted","abortAndFinalize","finalize","req","reqTimeout","addEventListener","removeEventListener","socket","isRedirect","location","locationURL","requestOpts","response_options","statusMessage","codings","zlibOptions","flush","Z_SYNC_FLUSH","finishFlush","createGunzip","createInflate","createInflateRaw","createBrotliDecompress","module","wrappy","strict","onceStrict","Function","f","called","onceError","navigator","version","platform","arch","cb","wrapper","args","ret","eval","require","__webpack_module_cache__","moduleId","threw","__webpack_modules__","__dirname"],"mappings":"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","file":"index.js","sourcesContent":["const core = require('@actions/core');\r\nconst github = require('@actions/github');\r\n\r\nasync function run() {\r\n  try {\r\n    const baseTokenRegex = new RegExp('%basebranch%', \"g\");\r\n    const headTokenRegex = new RegExp('%headbranch%', \"g\");\r\n\r\n    const inputs = {\r\n      token: core.getInput('repo-token', {required: true}),\r\n      baseBranchRegex: core.getInput('base-branch-regex'),\r\n      headBranchRegex: core.getInput('head-branch-regex'),\r\n      lowercaseBranch: (core.getInput('lowercase-branch').toLowerCase() === 'true'),\r\n      titleTemplate: core.getInput('title-template'),\r\n      titleUpdateAction: core.getInput('title-update-action').toLowerCase(),\r\n      titleInsertSpace: (core.getInput('title-insert-space').toLowerCase() === 'true'),\r\n      titleUppercaseBaseMatch: (core.getInput('title-uppercase-base-match').toLowerCase() === 'true'),\r\n      titleUppercaseHeadMatch: (core.getInput('title-uppercase-head-match').toLowerCase() === 'true'),\r\n      bodyTemplate: core.getInput('body-template'),\r\n      bodyUpdateAction: core.getInput('body-update-action').toLowerCase(),\r\n      bodyNewlineCount: parseInt(core.getInput('body-newline-count')),\r\n      bodyUppercaseBaseMatch: (core.getInput('body-uppercase-base-match').toLowerCase() === 'true'),\r\n      bodyUppercaseHeadMatch: (core.getInput('body-uppercase-head-match').toLowerCase() === 'true'),\r\n    }\r\n\r\n    const baseBranchRegex = inputs.baseBranchRegex.trim();\r\n    const matchBaseBranch = baseBranchRegex.length > 0;\r\n\r\n    const headBranchRegex = inputs.headBranchRegex.trim();\r\n    const matchHeadBranch = headBranchRegex.length > 0;\r\n\r\n    if (!matchBaseBranch && !matchHeadBranch) {\r\n      core.setFailed('No branch regex values have been specified');\r\n      return;\r\n    }\r\n\r\n    const matches = {\r\n      baseMatch: '',\r\n      headMatch: '',\r\n    }\r\n\r\n    if (matchBaseBranch) {\r\n      const baseBranchName = github.context.payload.pull_request.base.ref;\r\n      const baseBranch = inputs.lowercaseBranch ? baseBranchName.toLowerCase() : baseBranchName;\r\n      core.info(`Base branch: ${baseBranch}`);\r\n\r\n      const baseMatches = baseBranch.match(new RegExp(baseBranchRegex));\r\n      if (!baseMatches) {\r\n        core.setFailed('Base branch name does not match given regex');\r\n        return;\r\n      }\r\n\r\n      matches.baseMatch = baseMatches[0];\r\n      core.info(`Matched base branch text: ${matches.baseMatch}`);\r\n\r\n      core.setOutput('baseMatch', matches.baseMatch);\r\n    }\r\n\r\n    if (matchHeadBranch) {\r\n      const headBranchName = github.context.payload.pull_request.head.ref;\r\n      const headBranch = inputs.lowercaseBranch ? headBranchName.toLowerCase() : headBranchName;\r\n      core.info(`Head branch: ${headBranch}`);\r\n\r\n      const headMatches = headBranch.match(new RegExp(headBranchRegex));\r\n      if (!headMatches) {\r\n        core.setFailed('Head branch name does not match given regex');\r\n        return;\r\n      }\r\n\r\n      matches.headMatch = headMatches[0];\r\n      core.info(`Matched head branch text: ${matches.headMatch}`);\r\n\r\n      core.setOutput('headMatch', matches.headMatch);\r\n    }\r\n\r\n    const request = {\r\n      owner: github.context.repo.owner,\r\n      repo: github.context.repo.repo,\r\n      pull_number: github.context.payload.pull_request.number,\r\n    }\r\n\r\n    const upperCase = (upperCase, text) => upperCase ? text.toUpperCase() : text;\r\n\r\n    const title = github.context.payload.pull_request.title || '';\r\n    const processedTitleText = inputs.titleTemplate\r\n      .replace(baseTokenRegex, upperCase(inputs.titleUppercaseBaseMatch, matches.baseMatch))\r\n      .replace(headTokenRegex, upperCase(inputs.titleUppercaseHeadMatch, matches.headMatch));\r\n    core.info(`Processed title text: ${processedTitleText}`);\r\n\r\n    const updateTitle = ({\r\n      prefix: !title.toLowerCase().startsWith(processedTitleText.toLowerCase()),\r\n      suffix: !title.toLowerCase().endsWith(processedTitleText.toLowerCase()),\r\n      replace: title.toLowerCase() !== processedTitleText.toLowerCase(),\r\n    })[inputs.titleUpdateAction] || false;\r\n\r\n    core.setOutput('titleUpdated', updateTitle);\r\n\r\n    if (updateTitle) {\r\n      request.title = ({\r\n        prefix: processedTitleText.concat(inputs.titleInsertSpace ? ' ': '', title),\r\n        suffix: title.concat(inputs.titleInsertSpace ? ' ': '', processedTitleText),\r\n        replace: processedTitleText,\r\n      })[inputs.titleUpdateAction];\r\n      core.info(`New title: ${request.title}`);\r\n    } else {\r\n      core.warning('No updates were made to PR title');\r\n    }\r\n\r\n    const body = github.context.payload.pull_request.body || '';\r\n    const processedBodyText = inputs.bodyTemplate\r\n      .replace(baseTokenRegex, upperCase(inputs.bodyUppercaseBaseMatch, matches.baseMatch))\r\n      .replace(headTokenRegex, upperCase(inputs.bodyUppercaseHeadMatch, matches.headMatch));\r\n    core.debug(`Processed body text: ${processedBodyText}`);\r\n\r\n    const updateBody = ({\r\n      prefix: !body.toLowerCase().startsWith(processedBodyText.toLowerCase()),\r\n      suffix: !body.toLowerCase().endsWith(processedBodyText.toLowerCase()),\r\n      replace: body.toLowerCase() !== processedBodyText.toLowerCase(),\r\n    })[inputs.bodyUpdateAction] || false;\r\n\r\n    core.setOutput('bodyUpdated', updateBody);\r\n\r\n    if (updateBody) {\r\n      request.body = ({\r\n        prefix: processedBodyText.concat('\\n'.repeat(inputs.bodyNewlineCount), body),\r\n        suffix: body.concat('\\n'.repeat(inputs.bodyNewlineCount), processedBodyText),\r\n        replace: processedBodyText,\r\n      })[inputs.bodyUpdateAction];\r\n      core.debug(`New body: ${request.body}`);\r\n    } else {\r\n      core.warning('No updates were made to PR body');\r\n    }\r\n\r\n    if (!updateTitle && !updateBody) {\r\n      return;\r\n    }\r\n\r\n    const client = new github.GitHub(inputs.token);\r\n    const response = await client.pulls.update(request);\r\n\r\n    core.info(`Response: ${response.status}`);\r\n    if (response.status !== 200) {\r\n      core.error('Updating the pull request has failed');\r\n    }\r\n  }\r\n  catch (error) {\r\n    core.error(error);\r\n    core.setFailed(error.message);\r\n  }\r\n}\r\n\r\nrun()\r\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst os = require(\"os\");\n/**\n * Commands\n *\n * Command Format:\n *   ##[name key=value;key=value]message\n *\n * Examples:\n *   ##[warning]This is the user warning message\n *   ##[set-secret name=mypassword]definitelyNotAPassword!\n */\nfunction issueCommand(command, properties, message) {\n    const cmd = new Command(command, properties, message);\n    process.stdout.write(cmd.toString() + os.EOL);\n}\nexports.issueCommand = issueCommand;\nfunction issue(name, message = '') {\n    issueCommand(name, {}, message);\n}\nexports.issue = issue;\nconst CMD_STRING = '::';\nclass Command {\n    constructor(command, properties, message) {\n        if (!command) {\n            command = 'missing.command';\n        }\n        this.command = command;\n        this.properties = properties;\n        this.message = message;\n    }\n    toString() {\n        let cmdStr = CMD_STRING + this.command;\n        if (this.properties && Object.keys(this.properties).length > 0) {\n            cmdStr += ' ';\n            for (const key in this.properties) {\n                if (this.properties.hasOwnProperty(key)) {\n                    const val = this.properties[key];\n                    if (val) {\n                        // safely append the val - avoid blowing up when attempting to\n                        // call .replace() if message is not a string for some reason\n                        cmdStr += `${key}=${escape(`${val || ''}`)},`;\n                    }\n                }\n            }\n        }\n        cmdStr += CMD_STRING;\n        // safely append the message - avoid blowing up when attempting to\n        // call .replace() if message is not a string for some reason\n        const message = `${this.message || ''}`;\n        cmdStr += escapeData(message);\n        return cmdStr;\n    }\n}\nfunction escapeData(s) {\n    return s.replace(/\\r/g, '%0D').replace(/\\n/g, '%0A');\n}\nfunction escape(s) {\n    return s\n        .replace(/\\r/g, '%0D')\n        .replace(/\\n/g, '%0A')\n        .replace(/]/g, '%5D')\n        .replace(/;/g, '%3B');\n}\n//# sourceMappingURL=command.js.map","\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst command_1 = require(\"./command\");\nconst os = require(\"os\");\nconst path = require(\"path\");\n/**\n * The code to exit an action\n */\nvar ExitCode;\n(function (ExitCode) {\n    /**\n     * A code indicating that the action was successful\n     */\n    ExitCode[ExitCode[\"Success\"] = 0] = \"Success\";\n    /**\n     * A code indicating that the action was a failure\n     */\n    ExitCode[ExitCode[\"Failure\"] = 1] = \"Failure\";\n})(ExitCode = exports.ExitCode || (exports.ExitCode = {}));\n//-----------------------------------------------------------------------\n// Variables\n//-----------------------------------------------------------------------\n/**\n * Sets env variable for this action and future actions in the job\n * @param name the name of the variable to set\n * @param val the value of the variable\n */\nfunction exportVariable(name, val) {\n    process.env[name] = val;\n    command_1.issueCommand('set-env', { name }, val);\n}\nexports.exportVariable = exportVariable;\n/**\n * Registers a secret which will get masked from logs\n * @param secret value of the secret\n */\nfunction setSecret(secret) {\n    command_1.issueCommand('add-mask', {}, secret);\n}\nexports.setSecret = setSecret;\n/**\n * Prepends inputPath to the PATH (for this action and future actions)\n * @param inputPath\n */\nfunction addPath(inputPath) {\n    command_1.issueCommand('add-path', {}, inputPath);\n    process.env['PATH'] = `${inputPath}${path.delimiter}${process.env['PATH']}`;\n}\nexports.addPath = addPath;\n/**\n * Gets the value of an input.  The value is also trimmed.\n *\n * @param     name     name of the input to get\n * @param     options  optional. See InputOptions.\n * @returns   string\n */\nfunction getInput(name, options) {\n    const val = process.env[`INPUT_${name.replace(/ /g, '_').toUpperCase()}`] || '';\n    if (options && options.required && !val) {\n        throw new Error(`Input required and not supplied: ${name}`);\n    }\n    return val.trim();\n}\nexports.getInput = getInput;\n/**\n * Sets the value of an output.\n *\n * @param     name     name of the output to set\n * @param     value    value to store\n */\nfunction setOutput(name, value) {\n    command_1.issueCommand('set-output', { name }, value);\n}\nexports.setOutput = setOutput;\n//-----------------------------------------------------------------------\n// Results\n//-----------------------------------------------------------------------\n/**\n * Sets the action status to failed.\n * When the action exits it will be with an exit code of 1\n * @param message add error issue message\n */\nfunction setFailed(message) {\n    process.exitCode = ExitCode.Failure;\n    error(message);\n}\nexports.setFailed = setFailed;\n//-----------------------------------------------------------------------\n// Logging Commands\n//-----------------------------------------------------------------------\n/**\n * Writes debug message to user log\n * @param message debug message\n */\nfunction debug(message) {\n    command_1.issueCommand('debug', {}, message);\n}\nexports.debug = debug;\n/**\n * Adds an error issue\n * @param message error issue message\n */\nfunction error(message) {\n    command_1.issue('error', message);\n}\nexports.error = error;\n/**\n * Adds an warning issue\n * @param message warning issue message\n */\nfunction warning(message) {\n    command_1.issue('warning', message);\n}\nexports.warning = warning;\n/**\n * Writes info to log with console.log.\n * @param message info message\n */\nfunction info(message) {\n    process.stdout.write(message + os.EOL);\n}\nexports.info = info;\n/**\n * Begin an output group.\n *\n * Output until the next `groupEnd` will be foldable in this group\n *\n * @param name The name of the output group\n */\nfunction startGroup(name) {\n    command_1.issue('group', name);\n}\nexports.startGroup = startGroup;\n/**\n * End an output group.\n */\nfunction endGroup() {\n    command_1.issue('endgroup');\n}\nexports.endGroup = endGroup;\n/**\n * Wrap an asynchronous function call in a group.\n *\n * Returns the same type as the function itself.\n *\n * @param name The name of the group\n * @param fn The function to wrap in the group\n */\nfunction group(name, fn) {\n    return __awaiter(this, void 0, void 0, function* () {\n        startGroup(name);\n        let result;\n        try {\n            result = yield fn();\n        }\n        finally {\n            endGroup();\n        }\n        return result;\n    });\n}\nexports.group = group;\n//# sourceMappingURL=core.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst fs_1 = require(\"fs\");\nconst os_1 = require(\"os\");\nclass Context {\n    /**\n     * Hydrate the context from the environment\n     */\n    constructor() {\n        this.payload = {};\n        if (process.env.GITHUB_EVENT_PATH) {\n            if (fs_1.existsSync(process.env.GITHUB_EVENT_PATH)) {\n                this.payload = JSON.parse(fs_1.readFileSync(process.env.GITHUB_EVENT_PATH, { encoding: 'utf8' }));\n            }\n            else {\n                process.stdout.write(`GITHUB_EVENT_PATH ${process.env.GITHUB_EVENT_PATH} does not exist${os_1.EOL}`);\n            }\n        }\n        this.eventName = process.env.GITHUB_EVENT_NAME;\n        this.sha = process.env.GITHUB_SHA;\n        this.ref = process.env.GITHUB_REF;\n        this.workflow = process.env.GITHUB_WORKFLOW;\n        this.action = process.env.GITHUB_ACTION;\n        this.actor = process.env.GITHUB_ACTOR;\n    }\n    get issue() {\n        const payload = this.payload;\n        return Object.assign(Object.assign({}, this.repo), { number: (payload.issue || payload.pullRequest || payload).number });\n    }\n    get repo() {\n        if (process.env.GITHUB_REPOSITORY) {\n            const [owner, repo] = process.env.GITHUB_REPOSITORY.split('/');\n            return { owner, repo };\n        }\n        if (this.payload.repository) {\n            return {\n                owner: this.payload.repository.owner.login,\n                repo: this.payload.repository.name\n            };\n        }\n        throw new Error(\"context.repo requires a GITHUB_REPOSITORY environment variable like 'owner/repo'\");\n    }\n}\nexports.Context = Context;\n//# sourceMappingURL=context.js.map","\"use strict\";\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n    result[\"default\"] = mod;\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\n// Originally pulled from https://github.com/JasonEtco/actions-toolkit/blob/master/src/github.ts\nconst graphql_1 = require(\"@octokit/graphql\");\nconst rest_1 = __importDefault(require(\"@octokit/rest\"));\nconst Context = __importStar(require(\"./context\"));\n// We need this in order to extend Octokit\nrest_1.default.prototype = new rest_1.default();\nexports.context = new Context.Context();\nclass GitHub extends rest_1.default {\n    constructor(token, opts = {}) {\n        super(Object.assign(Object.assign({}, opts), { auth: `token ${token}` }));\n        this.graphql = graphql_1.defaults({\n            headers: { authorization: `token ${token}` }\n        });\n    }\n}\nexports.GitHub = GitHub;\n//# sourceMappingURL=github.js.map","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar isPlainObject = require('is-plain-object');\nvar universalUserAgent = require('universal-user-agent');\n\nfunction lowercaseKeys(object) {\n  if (!object) {\n    return {};\n  }\n\n  return Object.keys(object).reduce((newObj, key) => {\n    newObj[key.toLowerCase()] = object[key];\n    return newObj;\n  }, {});\n}\n\nfunction mergeDeep(defaults, options) {\n  const result = Object.assign({}, defaults);\n  Object.keys(options).forEach(key => {\n    if (isPlainObject.isPlainObject(options[key])) {\n      if (!(key in defaults)) Object.assign(result, {\n        [key]: options[key]\n      });else result[key] = mergeDeep(defaults[key], options[key]);\n    } else {\n      Object.assign(result, {\n        [key]: options[key]\n      });\n    }\n  });\n  return result;\n}\n\nfunction removeUndefinedProperties(obj) {\n  for (const key in obj) {\n    if (obj[key] === undefined) {\n      delete obj[key];\n    }\n  }\n\n  return obj;\n}\n\nfunction merge(defaults, route, options) {\n  if (typeof route === \"string\") {\n    let [method, url] = route.split(\" \");\n    options = Object.assign(url ? {\n      method,\n      url\n    } : {\n      url: method\n    }, options);\n  } else {\n    options = Object.assign({}, route);\n  } // lowercase header names before merging with defaults to avoid duplicates\n\n\n  options.headers = lowercaseKeys(options.headers); // remove properties with undefined values before merging\n\n  removeUndefinedProperties(options);\n  removeUndefinedProperties(options.headers);\n  const mergedOptions = mergeDeep(defaults || {}, options); // mediaType.previews arrays are merged, instead of overwritten\n\n  if (defaults && defaults.mediaType.previews.length) {\n    mergedOptions.mediaType.previews = defaults.mediaType.previews.filter(preview => !mergedOptions.mediaType.previews.includes(preview)).concat(mergedOptions.mediaType.previews);\n  }\n\n  mergedOptions.mediaType.previews = mergedOptions.mediaType.previews.map(preview => preview.replace(/-preview/, \"\"));\n  return mergedOptions;\n}\n\nfunction addQueryParameters(url, parameters) {\n  const separator = /\\?/.test(url) ? \"&\" : \"?\";\n  const names = Object.keys(parameters);\n\n  if (names.length === 0) {\n    return url;\n  }\n\n  return url + separator + names.map(name => {\n    if (name === \"q\") {\n      return \"q=\" + parameters.q.split(\"+\").map(encodeURIComponent).join(\"+\");\n    }\n\n    return `${name}=${encodeURIComponent(parameters[name])}`;\n  }).join(\"&\");\n}\n\nconst urlVariableRegex = /\\{[^}]+\\}/g;\n\nfunction removeNonChars(variableName) {\n  return variableName.replace(/^\\W+|\\W+$/g, \"\").split(/,/);\n}\n\nfunction extractUrlVariableNames(url) {\n  const matches = url.match(urlVariableRegex);\n\n  if (!matches) {\n    return [];\n  }\n\n  return matches.map(removeNonChars).reduce((a, b) => a.concat(b), []);\n}\n\nfunction omit(object, keysToOmit) {\n  return Object.keys(object).filter(option => !keysToOmit.includes(option)).reduce((obj, key) => {\n    obj[key] = object[key];\n    return obj;\n  }, {});\n}\n\n// Based on https://github.com/bramstein/url-template, licensed under BSD\n// TODO: create separate package.\n//\n// Copyright (c) 2012-2014, Bram Stein\n// All rights reserved.\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions\n// are met:\n//  1. Redistributions of source code must retain the above copyright\n//     notice, this list of conditions and the following disclaimer.\n//  2. Redistributions in binary form must reproduce the above copyright\n//     notice, this list of conditions and the following disclaimer in the\n//     documentation and/or other materials provided with the distribution.\n//  3. The name of the author may not be used to endorse or promote products\n//     derived from this software without specific prior written permission.\n// THIS SOFTWARE IS PROVIDED BY THE AUTHOR \"AS IS\" AND ANY EXPRESS OR IMPLIED\n// WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\n// MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO\n// EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n// INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n// BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n// DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n// OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n// NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n// EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n/* istanbul ignore file */\nfunction encodeReserved(str) {\n  return str.split(/(%[0-9A-Fa-f]{2})/g).map(function (part) {\n    if (!/%[0-9A-Fa-f]/.test(part)) {\n      part = encodeURI(part).replace(/%5B/g, \"[\").replace(/%5D/g, \"]\");\n    }\n\n    return part;\n  }).join(\"\");\n}\n\nfunction encodeUnreserved(str) {\n  return encodeURIComponent(str).replace(/[!'()*]/g, function (c) {\n    return \"%\" + c.charCodeAt(0).toString(16).toUpperCase();\n  });\n}\n\nfunction encodeValue(operator, value, key) {\n  value = operator === \"+\" || operator === \"#\" ? encodeReserved(value) : encodeUnreserved(value);\n\n  if (key) {\n    return encodeUnreserved(key) + \"=\" + value;\n  } else {\n    return value;\n  }\n}\n\nfunction isDefined(value) {\n  return value !== undefined && value !== null;\n}\n\nfunction isKeyOperator(operator) {\n  return operator === \";\" || operator === \"&\" || operator === \"?\";\n}\n\nfunction getValues(context, operator, key, modifier) {\n  var value = context[key],\n      result = [];\n\n  if (isDefined(value) && value !== \"\") {\n    if (typeof value === \"string\" || typeof value === \"number\" || typeof value === \"boolean\") {\n      value = value.toString();\n\n      if (modifier && modifier !== \"*\") {\n        value = value.substring(0, parseInt(modifier, 10));\n      }\n\n      result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n    } else {\n      if (modifier === \"*\") {\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function (value) {\n            result.push(encodeValue(operator, value, isKeyOperator(operator) ? key : \"\"));\n          });\n        } else {\n          Object.keys(value).forEach(function (k) {\n            if (isDefined(value[k])) {\n              result.push(encodeValue(operator, value[k], k));\n            }\n          });\n        }\n      } else {\n        const tmp = [];\n\n        if (Array.isArray(value)) {\n          value.filter(isDefined).forEach(function (value) {\n            tmp.push(encodeValue(operator, value));\n          });\n        } else {\n          Object.keys(value).forEach(function (k) {\n            if (isDefined(value[k])) {\n              tmp.push(encodeUnreserved(k));\n              tmp.push(encodeValue(operator, value[k].toString()));\n            }\n          });\n        }\n\n        if (isKeyOperator(operator)) {\n          result.push(encodeUnreserved(key) + \"=\" + tmp.join(\",\"));\n        } else if (tmp.length !== 0) {\n          result.push(tmp.join(\",\"));\n        }\n      }\n    }\n  } else {\n    if (operator === \";\") {\n      if (isDefined(value)) {\n        result.push(encodeUnreserved(key));\n      }\n    } else if (value === \"\" && (operator === \"&\" || operator === \"?\")) {\n      result.push(encodeUnreserved(key) + \"=\");\n    } else if (value === \"\") {\n      result.push(\"\");\n    }\n  }\n\n  return result;\n}\n\nfunction parseUrl(template) {\n  return {\n    expand: expand.bind(null, template)\n  };\n}\n\nfunction expand(template, context) {\n  var operators = [\"+\", \"#\", \".\", \"/\", \";\", \"?\", \"&\"];\n  return template.replace(/\\{([^\\{\\}]+)\\}|([^\\{\\}]+)/g, function (_, expression, literal) {\n    if (expression) {\n      let operator = \"\";\n      const values = [];\n\n      if (operators.indexOf(expression.charAt(0)) !== -1) {\n        operator = expression.charAt(0);\n        expression = expression.substr(1);\n      }\n\n      expression.split(/,/g).forEach(function (variable) {\n        var tmp = /([^:\\*]*)(?::(\\d+)|(\\*))?/.exec(variable);\n        values.push(getValues(context, operator, tmp[1], tmp[2] || tmp[3]));\n      });\n\n      if (operator && operator !== \"+\") {\n        var separator = \",\";\n\n        if (operator === \"?\") {\n          separator = \"&\";\n        } else if (operator !== \"#\") {\n          separator = operator;\n        }\n\n        return (values.length !== 0 ? operator : \"\") + values.join(separator);\n      } else {\n        return values.join(\",\");\n      }\n    } else {\n      return encodeReserved(literal);\n    }\n  });\n}\n\nfunction parse(options) {\n  // https://fetch.spec.whatwg.org/#methods\n  let method = options.method.toUpperCase(); // replace :varname with {varname} to make it RFC 6570 compatible\n\n  let url = (options.url || \"/\").replace(/:([a-z]\\w+)/g, \"{$1}\");\n  let headers = Object.assign({}, options.headers);\n  let body;\n  let parameters = omit(options, [\"method\", \"baseUrl\", \"url\", \"headers\", \"request\", \"mediaType\"]); // extract variable names from URL to calculate remaining variables later\n\n  const urlVariableNames = extractUrlVariableNames(url);\n  url = parseUrl(url).expand(parameters);\n\n  if (!/^http/.test(url)) {\n    url = options.baseUrl + url;\n  }\n\n  const omittedParameters = Object.keys(options).filter(option => urlVariableNames.includes(option)).concat(\"baseUrl\");\n  const remainingParameters = omit(parameters, omittedParameters);\n  const isBinaryRequest = /application\\/octet-stream/i.test(headers.accept);\n\n  if (!isBinaryRequest) {\n    if (options.mediaType.format) {\n      // e.g. application/vnd.github.v3+json => application/vnd.github.v3.raw\n      headers.accept = headers.accept.split(/,/).map(preview => preview.replace(/application\\/vnd(\\.\\w+)(\\.v3)?(\\.\\w+)?(\\+json)?$/, `application/vnd$1$2.${options.mediaType.format}`)).join(\",\");\n    }\n\n    if (options.mediaType.previews.length) {\n      const previewsFromAcceptHeader = headers.accept.match(/[\\w-]+(?=-preview)/g) || [];\n      headers.accept = previewsFromAcceptHeader.concat(options.mediaType.previews).map(preview => {\n        const format = options.mediaType.format ? `.${options.mediaType.format}` : \"+json\";\n        return `application/vnd.github.${preview}-preview${format}`;\n      }).join(\",\");\n    }\n  } // for GET/HEAD requests, set URL query parameters from remaining parameters\n  // for PATCH/POST/PUT/DELETE requests, set request body from remaining parameters\n\n\n  if ([\"GET\", \"HEAD\"].includes(method)) {\n    url = addQueryParameters(url, remainingParameters);\n  } else {\n    if (\"data\" in remainingParameters) {\n      body = remainingParameters.data;\n    } else {\n      if (Object.keys(remainingParameters).length) {\n        body = remainingParameters;\n      } else {\n        headers[\"content-length\"] = 0;\n      }\n    }\n  } // default content-type for JSON if body is set\n\n\n  if (!headers[\"content-type\"] && typeof body !== \"undefined\") {\n    headers[\"content-type\"] = \"application/json; charset=utf-8\";\n  } // GitHub expects 'content-length: 0' header for PUT/PATCH requests without body.\n  // fetch does not allow to set `content-length` header, but we can set body to an empty string\n\n\n  if ([\"PATCH\", \"PUT\"].includes(method) && typeof body === \"undefined\") {\n    body = \"\";\n  } // Only return body/request keys if present\n\n\n  return Object.assign({\n    method,\n    url,\n    headers\n  }, typeof body !== \"undefined\" ? {\n    body\n  } : null, options.request ? {\n    request: options.request\n  } : null);\n}\n\nfunction endpointWithDefaults(defaults, route, options) {\n  return parse(merge(defaults, route, options));\n}\n\nfunction withDefaults(oldDefaults, newDefaults) {\n  const DEFAULTS = merge(oldDefaults, newDefaults);\n  const endpoint = endpointWithDefaults.bind(null, DEFAULTS);\n  return Object.assign(endpoint, {\n    DEFAULTS,\n    defaults: withDefaults.bind(null, DEFAULTS),\n    merge: merge.bind(null, DEFAULTS),\n    parse\n  });\n}\n\nconst VERSION = \"6.0.8\";\n\nconst userAgent = `octokit-endpoint.js/${VERSION} ${universalUserAgent.getUserAgent()}`; // DEFAULTS has all properties set that EndpointOptions has, except url.\n// So we use RequestParameters and add method as additional required property.\n\nconst DEFAULTS = {\n  method: \"GET\",\n  baseUrl: \"https://api.github.com\",\n  headers: {\n    accept: \"application/vnd.github.v3+json\",\n    \"user-agent\": userAgent\n  },\n  mediaType: {\n    format: \"\",\n    previews: []\n  }\n};\n\nconst endpoint = withDefaults(null, DEFAULTS);\n\nexports.endpoint = endpoint;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexports.isPlainObject = isPlainObject;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar request = require('@octokit/request');\nvar universalUserAgent = require('universal-user-agent');\n\nconst VERSION = \"4.5.6\";\n\nclass GraphqlError extends Error {\n  constructor(request, response) {\n    const message = response.data.errors[0].message;\n    super(message);\n    Object.assign(this, response.data);\n    Object.assign(this, {\n      headers: response.headers\n    });\n    this.name = \"GraphqlError\";\n    this.request = request; // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n  }\n\n}\n\nconst NON_VARIABLE_OPTIONS = [\"method\", \"baseUrl\", \"url\", \"headers\", \"request\", \"query\", \"mediaType\"];\nconst GHES_V3_SUFFIX_REGEX = /\\/api\\/v3\\/?$/;\nfunction graphql(request, query, options) {\n  if (typeof query === \"string\" && options && \"query\" in options) {\n    return Promise.reject(new Error(`[@octokit/graphql] \"query\" cannot be used as variable name`));\n  }\n\n  const parsedOptions = typeof query === \"string\" ? Object.assign({\n    query\n  }, options) : query;\n  const requestOptions = Object.keys(parsedOptions).reduce((result, key) => {\n    if (NON_VARIABLE_OPTIONS.includes(key)) {\n      result[key] = parsedOptions[key];\n      return result;\n    }\n\n    if (!result.variables) {\n      result.variables = {};\n    }\n\n    result.variables[key] = parsedOptions[key];\n    return result;\n  }, {}); // workaround for GitHub Enterprise baseUrl set with /api/v3 suffix\n  // https://github.com/octokit/auth-app.js/issues/111#issuecomment-657610451\n\n  const baseUrl = parsedOptions.baseUrl || request.endpoint.DEFAULTS.baseUrl;\n\n  if (GHES_V3_SUFFIX_REGEX.test(baseUrl)) {\n    requestOptions.url = baseUrl.replace(GHES_V3_SUFFIX_REGEX, \"/api/graphql\");\n  }\n\n  return request(requestOptions).then(response => {\n    if (response.data.errors) {\n      const headers = {};\n\n      for (const key of Object.keys(response.headers)) {\n        headers[key] = response.headers[key];\n      }\n\n      throw new GraphqlError(requestOptions, {\n        headers,\n        data: response.data\n      });\n    }\n\n    return response.data.data;\n  });\n}\n\nfunction withDefaults(request$1, newDefaults) {\n  const newRequest = request$1.defaults(newDefaults);\n\n  const newApi = (query, options) => {\n    return graphql(newRequest, query, options);\n  };\n\n  return Object.assign(newApi, {\n    defaults: withDefaults.bind(null, newRequest),\n    endpoint: request.request.endpoint\n  });\n}\n\nconst graphql$1 = withDefaults(request.request, {\n  headers: {\n    \"user-agent\": `octokit-graphql.js/${VERSION} ${universalUserAgent.getUserAgent()}`\n  },\n  method: \"POST\",\n  url: \"/graphql\"\n});\nfunction withCustomRequest(customRequest) {\n  return withDefaults(customRequest, {\n    method: \"POST\",\n    url: \"/graphql\"\n  });\n}\n\nexports.graphql = graphql$1;\nexports.withCustomRequest = withCustomRequest;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar deprecation = require('deprecation');\nvar once = _interopDefault(require('once'));\n\nconst logOnce = once(deprecation => console.warn(deprecation));\n/**\n * Error with extra properties to help with debugging\n */\n\nclass RequestError extends Error {\n  constructor(message, statusCode, options) {\n    super(message); // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n\n    this.name = \"HttpError\";\n    this.status = statusCode;\n    Object.defineProperty(this, \"code\", {\n      get() {\n        logOnce(new deprecation.Deprecation(\"[@octokit/request-error] `error.code` is deprecated, use `error.status`.\"));\n        return statusCode;\n      }\n\n    });\n    this.headers = options.headers || {}; // redact request credentials without mutating original request options\n\n    const requestCopy = Object.assign({}, options.request);\n\n    if (options.request.headers.authorization) {\n      requestCopy.headers = Object.assign({}, options.request.headers, {\n        authorization: options.request.headers.authorization.replace(/ .*$/, \" [REDACTED]\")\n      });\n    }\n\n    requestCopy.url = requestCopy.url // client_id & client_secret can be passed as URL query parameters to increase rate limit\n    // see https://developer.github.com/v3/#increasing-the-unauthenticated-rate-limit-for-oauth-applications\n    .replace(/\\bclient_secret=\\w+/g, \"client_secret=[REDACTED]\") // OAuth tokens can be passed as URL query parameters, although it is not recommended\n    // see https://developer.github.com/v3/#oauth2-token-sent-in-a-header\n    .replace(/\\baccess_token=\\w+/g, \"access_token=[REDACTED]\");\n    this.request = requestCopy;\n  }\n\n}\n\nexports.RequestError = RequestError;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar endpoint = require('@octokit/endpoint');\nvar universalUserAgent = require('universal-user-agent');\nvar isPlainObject = require('is-plain-object');\nvar nodeFetch = _interopDefault(require('node-fetch'));\nvar requestError = require('@octokit/request-error');\n\nconst VERSION = \"5.4.9\";\n\nfunction getBufferResponse(response) {\n  return response.arrayBuffer();\n}\n\nfunction fetchWrapper(requestOptions) {\n  if (isPlainObject.isPlainObject(requestOptions.body) || Array.isArray(requestOptions.body)) {\n    requestOptions.body = JSON.stringify(requestOptions.body);\n  }\n\n  let headers = {};\n  let status;\n  let url;\n  const fetch = requestOptions.request && requestOptions.request.fetch || nodeFetch;\n  return fetch(requestOptions.url, Object.assign({\n    method: requestOptions.method,\n    body: requestOptions.body,\n    headers: requestOptions.headers,\n    redirect: requestOptions.redirect\n  }, requestOptions.request)).then(response => {\n    url = response.url;\n    status = response.status;\n\n    for (const keyAndValue of response.headers) {\n      headers[keyAndValue[0]] = keyAndValue[1];\n    }\n\n    if (status === 204 || status === 205) {\n      return;\n    } // GitHub API returns 200 for HEAD requests\n\n\n    if (requestOptions.method === \"HEAD\") {\n      if (status < 400) {\n        return;\n      }\n\n      throw new requestError.RequestError(response.statusText, status, {\n        headers,\n        request: requestOptions\n      });\n    }\n\n    if (status === 304) {\n      throw new requestError.RequestError(\"Not modified\", status, {\n        headers,\n        request: requestOptions\n      });\n    }\n\n    if (status >= 400) {\n      return response.text().then(message => {\n        const error = new requestError.RequestError(message, status, {\n          headers,\n          request: requestOptions\n        });\n\n        try {\n          let responseBody = JSON.parse(error.message);\n          Object.assign(error, responseBody);\n          let errors = responseBody.errors; // Assumption `errors` would always be in Array format\n\n          error.message = error.message + \": \" + errors.map(JSON.stringify).join(\", \");\n        } catch (e) {// ignore, see octokit/rest.js#684\n        }\n\n        throw error;\n      });\n    }\n\n    const contentType = response.headers.get(\"content-type\");\n\n    if (/application\\/json/.test(contentType)) {\n      return response.json();\n    }\n\n    if (!contentType || /^text\\/|charset=utf-8$/.test(contentType)) {\n      return response.text();\n    }\n\n    return getBufferResponse(response);\n  }).then(data => {\n    return {\n      status,\n      url,\n      headers,\n      data\n    };\n  }).catch(error => {\n    if (error instanceof requestError.RequestError) {\n      throw error;\n    }\n\n    throw new requestError.RequestError(error.message, 500, {\n      headers,\n      request: requestOptions\n    });\n  });\n}\n\nfunction withDefaults(oldEndpoint, newDefaults) {\n  const endpoint = oldEndpoint.defaults(newDefaults);\n\n  const newApi = function (route, parameters) {\n    const endpointOptions = endpoint.merge(route, parameters);\n\n    if (!endpointOptions.request || !endpointOptions.request.hook) {\n      return fetchWrapper(endpoint.parse(endpointOptions));\n    }\n\n    const request = (route, parameters) => {\n      return fetchWrapper(endpoint.parse(endpoint.merge(route, parameters)));\n    };\n\n    Object.assign(request, {\n      endpoint,\n      defaults: withDefaults.bind(null, endpoint)\n    });\n    return endpointOptions.request.hook(request, endpointOptions);\n  };\n\n  return Object.assign(newApi, {\n    endpoint,\n    defaults: withDefaults.bind(null, endpoint)\n  });\n}\n\nconst request = withDefaults(endpoint.endpoint, {\n  headers: {\n    \"user-agent\": `octokit-request.js/${VERSION} ${universalUserAgent.getUserAgent()}`\n  }\n});\n\nexports.request = request;\n//# sourceMappingURL=index.js.map\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\nfunction isObject(o) {\n  return Object.prototype.toString.call(o) === '[object Object]';\n}\n\nfunction isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (ctor === undefined) return true;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n}\n\nexports.isPlainObject = isPlainObject;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nclass Deprecation extends Error {\n  constructor(message) {\n    super(message); // Maintains proper stack trace (only available on V8)\n\n    /* istanbul ignore next */\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, this.constructor);\n    }\n\n    this.name = 'Deprecation';\n  }\n\n}\n\nexports.Deprecation = Deprecation;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar Stream = _interopDefault(require('stream'));\nvar http = _interopDefault(require('http'));\nvar Url = _interopDefault(require('url'));\nvar https = _interopDefault(require('https'));\nvar zlib = _interopDefault(require('zlib'));\n\n// Based on https://github.com/tmpvar/jsdom/blob/aa85b2abf07766ff7bf5c1f6daafb3726f2f2db5/lib/jsdom/living/blob.js\n\n// fix for \"Readable\" isn't a named export issue\nconst Readable = Stream.Readable;\n\nconst BUFFER = Symbol('buffer');\nconst TYPE = Symbol('type');\n\nclass Blob {\n\tconstructor() {\n\t\tthis[TYPE] = '';\n\n\t\tconst blobParts = arguments[0];\n\t\tconst options = arguments[1];\n\n\t\tconst buffers = [];\n\t\tlet size = 0;\n\n\t\tif (blobParts) {\n\t\t\tconst a = blobParts;\n\t\t\tconst length = Number(a.length);\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst element = a[i];\n\t\t\t\tlet buffer;\n\t\t\t\tif (element instanceof Buffer) {\n\t\t\t\t\tbuffer = element;\n\t\t\t\t} else if (ArrayBuffer.isView(element)) {\n\t\t\t\t\tbuffer = Buffer.from(element.buffer, element.byteOffset, element.byteLength);\n\t\t\t\t} else if (element instanceof ArrayBuffer) {\n\t\t\t\t\tbuffer = Buffer.from(element);\n\t\t\t\t} else if (element instanceof Blob) {\n\t\t\t\t\tbuffer = element[BUFFER];\n\t\t\t\t} else {\n\t\t\t\t\tbuffer = Buffer.from(typeof element === 'string' ? element : String(element));\n\t\t\t\t}\n\t\t\t\tsize += buffer.length;\n\t\t\t\tbuffers.push(buffer);\n\t\t\t}\n\t\t}\n\n\t\tthis[BUFFER] = Buffer.concat(buffers);\n\n\t\tlet type = options && options.type !== undefined && String(options.type).toLowerCase();\n\t\tif (type && !/[^\\u0020-\\u007E]/.test(type)) {\n\t\t\tthis[TYPE] = type;\n\t\t}\n\t}\n\tget size() {\n\t\treturn this[BUFFER].length;\n\t}\n\tget type() {\n\t\treturn this[TYPE];\n\t}\n\ttext() {\n\t\treturn Promise.resolve(this[BUFFER].toString());\n\t}\n\tarrayBuffer() {\n\t\tconst buf = this[BUFFER];\n\t\tconst ab = buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\treturn Promise.resolve(ab);\n\t}\n\tstream() {\n\t\tconst readable = new Readable();\n\t\treadable._read = function () {};\n\t\treadable.push(this[BUFFER]);\n\t\treadable.push(null);\n\t\treturn readable;\n\t}\n\ttoString() {\n\t\treturn '[object Blob]';\n\t}\n\tslice() {\n\t\tconst size = this.size;\n\n\t\tconst start = arguments[0];\n\t\tconst end = arguments[1];\n\t\tlet relativeStart, relativeEnd;\n\t\tif (start === undefined) {\n\t\t\trelativeStart = 0;\n\t\t} else if (start < 0) {\n\t\t\trelativeStart = Math.max(size + start, 0);\n\t\t} else {\n\t\t\trelativeStart = Math.min(start, size);\n\t\t}\n\t\tif (end === undefined) {\n\t\t\trelativeEnd = size;\n\t\t} else if (end < 0) {\n\t\t\trelativeEnd = Math.max(size + end, 0);\n\t\t} else {\n\t\t\trelativeEnd = Math.min(end, size);\n\t\t}\n\t\tconst span = Math.max(relativeEnd - relativeStart, 0);\n\n\t\tconst buffer = this[BUFFER];\n\t\tconst slicedBuffer = buffer.slice(relativeStart, relativeStart + span);\n\t\tconst blob = new Blob([], { type: arguments[2] });\n\t\tblob[BUFFER] = slicedBuffer;\n\t\treturn blob;\n\t}\n}\n\nObject.defineProperties(Blob.prototype, {\n\tsize: { enumerable: true },\n\ttype: { enumerable: true },\n\tslice: { enumerable: true }\n});\n\nObject.defineProperty(Blob.prototype, Symbol.toStringTag, {\n\tvalue: 'Blob',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * fetch-error.js\n *\n * FetchError interface for operational errors\n */\n\n/**\n * Create FetchError instance\n *\n * @param   String      message      Error message for human\n * @param   String      type         Error type for machine\n * @param   String      systemError  For Node.js system error\n * @return  FetchError\n */\nfunction FetchError(message, type, systemError) {\n  Error.call(this, message);\n\n  this.message = message;\n  this.type = type;\n\n  // when err.type is `system`, err.code contains system error code\n  if (systemError) {\n    this.code = this.errno = systemError.code;\n  }\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nFetchError.prototype = Object.create(Error.prototype);\nFetchError.prototype.constructor = FetchError;\nFetchError.prototype.name = 'FetchError';\n\nlet convert;\ntry {\n\tconvert = require('encoding').convert;\n} catch (e) {}\n\nconst INTERNALS = Symbol('Body internals');\n\n// fix an issue where \"PassThrough\" isn't a named export for node <10\nconst PassThrough = Stream.PassThrough;\n\n/**\n * Body mixin\n *\n * Ref: https://fetch.spec.whatwg.org/#body\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nfunction Body(body) {\n\tvar _this = this;\n\n\tvar _ref = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {},\n\t    _ref$size = _ref.size;\n\n\tlet size = _ref$size === undefined ? 0 : _ref$size;\n\tvar _ref$timeout = _ref.timeout;\n\tlet timeout = _ref$timeout === undefined ? 0 : _ref$timeout;\n\n\tif (body == null) {\n\t\t// body is undefined or null\n\t\tbody = null;\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\tbody = Buffer.from(body.toString());\n\t} else if (isBlob(body)) ; else if (Buffer.isBuffer(body)) ; else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\tbody = Buffer.from(body);\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\tbody = Buffer.from(body.buffer, body.byteOffset, body.byteLength);\n\t} else if (body instanceof Stream) ; else {\n\t\t// none of the above\n\t\t// coerce to string then buffer\n\t\tbody = Buffer.from(String(body));\n\t}\n\tthis[INTERNALS] = {\n\t\tbody,\n\t\tdisturbed: false,\n\t\terror: null\n\t};\n\tthis.size = size;\n\tthis.timeout = timeout;\n\n\tif (body instanceof Stream) {\n\t\tbody.on('error', function (err) {\n\t\t\tconst error = err.name === 'AbortError' ? err : new FetchError(`Invalid response body while trying to fetch ${_this.url}: ${err.message}`, 'system', err);\n\t\t\t_this[INTERNALS].error = error;\n\t\t});\n\t}\n}\n\nBody.prototype = {\n\tget body() {\n\t\treturn this[INTERNALS].body;\n\t},\n\n\tget bodyUsed() {\n\t\treturn this[INTERNALS].disturbed;\n\t},\n\n\t/**\n  * Decode response as ArrayBuffer\n  *\n  * @return  Promise\n  */\n\tarrayBuffer() {\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn buf.buffer.slice(buf.byteOffset, buf.byteOffset + buf.byteLength);\n\t\t});\n\t},\n\n\t/**\n  * Return raw response as Blob\n  *\n  * @return Promise\n  */\n\tblob() {\n\t\tlet ct = this.headers && this.headers.get('content-type') || '';\n\t\treturn consumeBody.call(this).then(function (buf) {\n\t\t\treturn Object.assign(\n\t\t\t// Prevent copying\n\t\t\tnew Blob([], {\n\t\t\t\ttype: ct.toLowerCase()\n\t\t\t}), {\n\t\t\t\t[BUFFER]: buf\n\t\t\t});\n\t\t});\n\t},\n\n\t/**\n  * Decode response as json\n  *\n  * @return  Promise\n  */\n\tjson() {\n\t\tvar _this2 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\ttry {\n\t\t\t\treturn JSON.parse(buffer.toString());\n\t\t\t} catch (err) {\n\t\t\t\treturn Body.Promise.reject(new FetchError(`invalid json response body at ${_this2.url} reason: ${err.message}`, 'invalid-json'));\n\t\t\t}\n\t\t});\n\t},\n\n\t/**\n  * Decode response as text\n  *\n  * @return  Promise\n  */\n\ttext() {\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn buffer.toString();\n\t\t});\n\t},\n\n\t/**\n  * Decode response as buffer (non-spec api)\n  *\n  * @return  Promise\n  */\n\tbuffer() {\n\t\treturn consumeBody.call(this);\n\t},\n\n\t/**\n  * Decode response as text, while automatically detecting the encoding and\n  * trying to decode to UTF-8 (non-spec api)\n  *\n  * @return  Promise\n  */\n\ttextConverted() {\n\t\tvar _this3 = this;\n\n\t\treturn consumeBody.call(this).then(function (buffer) {\n\t\t\treturn convertBody(buffer, _this3.headers);\n\t\t});\n\t}\n};\n\n// In browsers, all properties are enumerable.\nObject.defineProperties(Body.prototype, {\n\tbody: { enumerable: true },\n\tbodyUsed: { enumerable: true },\n\tarrayBuffer: { enumerable: true },\n\tblob: { enumerable: true },\n\tjson: { enumerable: true },\n\ttext: { enumerable: true }\n});\n\nBody.mixIn = function (proto) {\n\tfor (const name of Object.getOwnPropertyNames(Body.prototype)) {\n\t\t// istanbul ignore else: future proof\n\t\tif (!(name in proto)) {\n\t\t\tconst desc = Object.getOwnPropertyDescriptor(Body.prototype, name);\n\t\t\tObject.defineProperty(proto, name, desc);\n\t\t}\n\t}\n};\n\n/**\n * Consume and convert an entire Body to a Buffer.\n *\n * Ref: https://fetch.spec.whatwg.org/#concept-body-consume-body\n *\n * @return  Promise\n */\nfunction consumeBody() {\n\tvar _this4 = this;\n\n\tif (this[INTERNALS].disturbed) {\n\t\treturn Body.Promise.reject(new TypeError(`body used already for: ${this.url}`));\n\t}\n\n\tthis[INTERNALS].disturbed = true;\n\n\tif (this[INTERNALS].error) {\n\t\treturn Body.Promise.reject(this[INTERNALS].error);\n\t}\n\n\tlet body = this.body;\n\n\t// body is null\n\tif (body === null) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is blob\n\tif (isBlob(body)) {\n\t\tbody = body.stream();\n\t}\n\n\t// body is buffer\n\tif (Buffer.isBuffer(body)) {\n\t\treturn Body.Promise.resolve(body);\n\t}\n\n\t// istanbul ignore if: should never happen\n\tif (!(body instanceof Stream)) {\n\t\treturn Body.Promise.resolve(Buffer.alloc(0));\n\t}\n\n\t// body is stream\n\t// get ready to actually consume the body\n\tlet accum = [];\n\tlet accumBytes = 0;\n\tlet abort = false;\n\n\treturn new Body.Promise(function (resolve, reject) {\n\t\tlet resTimeout;\n\n\t\t// allow timeout on slow response body\n\t\tif (_this4.timeout) {\n\t\t\tresTimeout = setTimeout(function () {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`Response timeout while trying to fetch ${_this4.url} (over ${_this4.timeout}ms)`, 'body-timeout'));\n\t\t\t}, _this4.timeout);\n\t\t}\n\n\t\t// handle stream errors\n\t\tbody.on('error', function (err) {\n\t\t\tif (err.name === 'AbortError') {\n\t\t\t\t// if the request was aborted, reject with this Error\n\t\t\t\tabort = true;\n\t\t\t\treject(err);\n\t\t\t} else {\n\t\t\t\t// other errors, such as incorrect content-encoding\n\t\t\t\treject(new FetchError(`Invalid response body while trying to fetch ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\n\t\tbody.on('data', function (chunk) {\n\t\t\tif (abort || chunk === null) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_this4.size && accumBytes + chunk.length > _this4.size) {\n\t\t\t\tabort = true;\n\t\t\t\treject(new FetchError(`content size at ${_this4.url} over limit: ${_this4.size}`, 'max-size'));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\taccumBytes += chunk.length;\n\t\t\taccum.push(chunk);\n\t\t});\n\n\t\tbody.on('end', function () {\n\t\t\tif (abort) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tclearTimeout(resTimeout);\n\n\t\t\ttry {\n\t\t\t\tresolve(Buffer.concat(accum, accumBytes));\n\t\t\t} catch (err) {\n\t\t\t\t// handle streams that have accumulated too much data (issue #414)\n\t\t\t\treject(new FetchError(`Could not create Buffer from response body for ${_this4.url}: ${err.message}`, 'system', err));\n\t\t\t}\n\t\t});\n\t});\n}\n\n/**\n * Detect buffer encoding and convert to target encoding\n * ref: http://www.w3.org/TR/2011/WD-html5-20110113/parsing.html#determining-the-character-encoding\n *\n * @param   Buffer  buffer    Incoming buffer\n * @param   String  encoding  Target encoding\n * @return  String\n */\nfunction convertBody(buffer, headers) {\n\tif (typeof convert !== 'function') {\n\t\tthrow new Error('The package `encoding` must be installed to use the textConverted() function');\n\t}\n\n\tconst ct = headers.get('content-type');\n\tlet charset = 'utf-8';\n\tlet res, str;\n\n\t// header\n\tif (ct) {\n\t\tres = /charset=([^;]*)/i.exec(ct);\n\t}\n\n\t// no charset in content type, peek at response body for at most 1024 bytes\n\tstr = buffer.slice(0, 1024).toString();\n\n\t// html5\n\tif (!res && str) {\n\t\tres = /<meta.+?charset=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// html4\n\tif (!res && str) {\n\t\tres = /<meta[\\s]+?http-equiv=(['\"])content-type\\1[\\s]+?content=(['\"])(.+?)\\2/i.exec(str);\n\t\tif (!res) {\n\t\t\tres = /<meta[\\s]+?content=(['\"])(.+?)\\1[\\s]+?http-equiv=(['\"])content-type\\3/i.exec(str);\n\t\t\tif (res) {\n\t\t\t\tres.pop(); // drop last quote\n\t\t\t}\n\t\t}\n\n\t\tif (res) {\n\t\t\tres = /charset=(.*)/i.exec(res.pop());\n\t\t}\n\t}\n\n\t// xml\n\tif (!res && str) {\n\t\tres = /<\\?xml.+?encoding=(['\"])(.+?)\\1/i.exec(str);\n\t}\n\n\t// found charset\n\tif (res) {\n\t\tcharset = res.pop();\n\n\t\t// prevent decode issues when sites use incorrect encoding\n\t\t// ref: https://hsivonen.fi/encoding-menu/\n\t\tif (charset === 'gb2312' || charset === 'gbk') {\n\t\t\tcharset = 'gb18030';\n\t\t}\n\t}\n\n\t// turn raw buffers into a single utf-8 buffer\n\treturn convert(buffer, 'UTF-8', charset).toString();\n}\n\n/**\n * Detect a URLSearchParams object\n * ref: https://github.com/bitinn/node-fetch/issues/296#issuecomment-307598143\n *\n * @param   Object  obj     Object to detect by type or brand\n * @return  String\n */\nfunction isURLSearchParams(obj) {\n\t// Duck-typing as a necessary condition.\n\tif (typeof obj !== 'object' || typeof obj.append !== 'function' || typeof obj.delete !== 'function' || typeof obj.get !== 'function' || typeof obj.getAll !== 'function' || typeof obj.has !== 'function' || typeof obj.set !== 'function') {\n\t\treturn false;\n\t}\n\n\t// Brand-checking and more duck-typing as optional condition.\n\treturn obj.constructor.name === 'URLSearchParams' || Object.prototype.toString.call(obj) === '[object URLSearchParams]' || typeof obj.sort === 'function';\n}\n\n/**\n * Check if `obj` is a W3C `Blob` object (which `File` inherits from)\n * @param  {*} obj\n * @return {boolean}\n */\nfunction isBlob(obj) {\n\treturn typeof obj === 'object' && typeof obj.arrayBuffer === 'function' && typeof obj.type === 'string' && typeof obj.stream === 'function' && typeof obj.constructor === 'function' && typeof obj.constructor.name === 'string' && /^(Blob|File)$/.test(obj.constructor.name) && /^(Blob|File)$/.test(obj[Symbol.toStringTag]);\n}\n\n/**\n * Clone body given Res/Req instance\n *\n * @param   Mixed  instance  Response or Request instance\n * @return  Mixed\n */\nfunction clone(instance) {\n\tlet p1, p2;\n\tlet body = instance.body;\n\n\t// don't allow cloning a used body\n\tif (instance.bodyUsed) {\n\t\tthrow new Error('cannot clone body after it is used');\n\t}\n\n\t// check that body is a stream and not form-data object\n\t// note: we can't clone the form-data object without having it as a dependency\n\tif (body instanceof Stream && typeof body.getBoundary !== 'function') {\n\t\t// tee instance body\n\t\tp1 = new PassThrough();\n\t\tp2 = new PassThrough();\n\t\tbody.pipe(p1);\n\t\tbody.pipe(p2);\n\t\t// set instance body to teed body and return the other teed body\n\t\tinstance[INTERNALS].body = p1;\n\t\tbody = p2;\n\t}\n\n\treturn body;\n}\n\n/**\n * Performs the operation \"extract a `Content-Type` value from |object|\" as\n * specified in the specification:\n * https://fetch.spec.whatwg.org/#concept-bodyinit-extract\n *\n * This function assumes that instance.body is present.\n *\n * @param   Mixed  instance  Any options.body input\n */\nfunction extractContentType(body) {\n\tif (body === null) {\n\t\t// body is null\n\t\treturn null;\n\t} else if (typeof body === 'string') {\n\t\t// body is string\n\t\treturn 'text/plain;charset=UTF-8';\n\t} else if (isURLSearchParams(body)) {\n\t\t// body is a URLSearchParams\n\t\treturn 'application/x-www-form-urlencoded;charset=UTF-8';\n\t} else if (isBlob(body)) {\n\t\t// body is blob\n\t\treturn body.type || null;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn null;\n\t} else if (Object.prototype.toString.call(body) === '[object ArrayBuffer]') {\n\t\t// body is ArrayBuffer\n\t\treturn null;\n\t} else if (ArrayBuffer.isView(body)) {\n\t\t// body is ArrayBufferView\n\t\treturn null;\n\t} else if (typeof body.getBoundary === 'function') {\n\t\t// detect form data input from form-data module\n\t\treturn `multipart/form-data;boundary=${body.getBoundary()}`;\n\t} else if (body instanceof Stream) {\n\t\t// body is stream\n\t\t// can't really do much about this\n\t\treturn null;\n\t} else {\n\t\t// Body constructor defaults other things to string\n\t\treturn 'text/plain;charset=UTF-8';\n\t}\n}\n\n/**\n * The Fetch Standard treats this as if \"total bytes\" is a property on the body.\n * For us, we have to explicitly get it with a function.\n *\n * ref: https://fetch.spec.whatwg.org/#concept-body-total-bytes\n *\n * @param   Body    instance   Instance of Body\n * @return  Number?            Number of bytes, or null if not possible\n */\nfunction getTotalBytes(instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\treturn 0;\n\t} else if (isBlob(body)) {\n\t\treturn body.size;\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\treturn body.length;\n\t} else if (body && typeof body.getLengthSync === 'function') {\n\t\t// detect form data input from form-data module\n\t\tif (body._lengthRetrievers && body._lengthRetrievers.length == 0 || // 1.x\n\t\tbody.hasKnownLength && body.hasKnownLength()) {\n\t\t\t// 2.x\n\t\t\treturn body.getLengthSync();\n\t\t}\n\t\treturn null;\n\t} else {\n\t\t// body is stream\n\t\treturn null;\n\t}\n}\n\n/**\n * Write a Body to a Node.js WritableStream (e.g. http.Request) object.\n *\n * @param   Body    instance   Instance of Body\n * @return  Void\n */\nfunction writeToStream(dest, instance) {\n\tconst body = instance.body;\n\n\n\tif (body === null) {\n\t\t// body is null\n\t\tdest.end();\n\t} else if (isBlob(body)) {\n\t\tbody.stream().pipe(dest);\n\t} else if (Buffer.isBuffer(body)) {\n\t\t// body is buffer\n\t\tdest.write(body);\n\t\tdest.end();\n\t} else {\n\t\t// body is stream\n\t\tbody.pipe(dest);\n\t}\n}\n\n// expose Promise\nBody.Promise = global.Promise;\n\n/**\n * headers.js\n *\n * Headers class offers convenient helpers\n */\n\nconst invalidTokenRegex = /[^\\^_`a-zA-Z\\-0-9!#$%&'*+.|~]/;\nconst invalidHeaderCharRegex = /[^\\t\\x20-\\x7e\\x80-\\xff]/;\n\nfunction validateName(name) {\n\tname = `${name}`;\n\tif (invalidTokenRegex.test(name) || name === '') {\n\t\tthrow new TypeError(`${name} is not a legal HTTP header name`);\n\t}\n}\n\nfunction validateValue(value) {\n\tvalue = `${value}`;\n\tif (invalidHeaderCharRegex.test(value)) {\n\t\tthrow new TypeError(`${value} is not a legal HTTP header value`);\n\t}\n}\n\n/**\n * Find the key in the map object given a header name.\n *\n * Returns undefined if not found.\n *\n * @param   String  name  Header name\n * @return  String|Undefined\n */\nfunction find(map, name) {\n\tname = name.toLowerCase();\n\tfor (const key in map) {\n\t\tif (key.toLowerCase() === name) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn undefined;\n}\n\nconst MAP = Symbol('map');\nclass Headers {\n\t/**\n  * Headers class\n  *\n  * @param   Object  headers  Response headers\n  * @return  Void\n  */\n\tconstructor() {\n\t\tlet init = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : undefined;\n\n\t\tthis[MAP] = Object.create(null);\n\n\t\tif (init instanceof Headers) {\n\t\t\tconst rawHeaders = init.raw();\n\t\t\tconst headerNames = Object.keys(rawHeaders);\n\n\t\t\tfor (const headerName of headerNames) {\n\t\t\t\tfor (const value of rawHeaders[headerName]) {\n\t\t\t\t\tthis.append(headerName, value);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn;\n\t\t}\n\n\t\t// We don't worry about converting prop to ByteString here as append()\n\t\t// will handle it.\n\t\tif (init == null) ; else if (typeof init === 'object') {\n\t\t\tconst method = init[Symbol.iterator];\n\t\t\tif (method != null) {\n\t\t\t\tif (typeof method !== 'function') {\n\t\t\t\t\tthrow new TypeError('Header pairs must be iterable');\n\t\t\t\t}\n\n\t\t\t\t// sequence<sequence<ByteString>>\n\t\t\t\t// Note: per spec we have to first exhaust the lists then process them\n\t\t\t\tconst pairs = [];\n\t\t\t\tfor (const pair of init) {\n\t\t\t\t\tif (typeof pair !== 'object' || typeof pair[Symbol.iterator] !== 'function') {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be iterable');\n\t\t\t\t\t}\n\t\t\t\t\tpairs.push(Array.from(pair));\n\t\t\t\t}\n\n\t\t\t\tfor (const pair of pairs) {\n\t\t\t\t\tif (pair.length !== 2) {\n\t\t\t\t\t\tthrow new TypeError('Each header pair must be a name/value tuple');\n\t\t\t\t\t}\n\t\t\t\t\tthis.append(pair[0], pair[1]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// record<ByteString, ByteString>\n\t\t\t\tfor (const key of Object.keys(init)) {\n\t\t\t\t\tconst value = init[key];\n\t\t\t\t\tthis.append(key, value);\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tthrow new TypeError('Provided initializer must be an object');\n\t\t}\n\t}\n\n\t/**\n  * Return combined header value given name\n  *\n  * @param   String  name  Header name\n  * @return  Mixed\n  */\n\tget(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key === undefined) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn this[MAP][key].join(', ');\n\t}\n\n\t/**\n  * Iterate over all headers\n  *\n  * @param   Function  callback  Executed for each item with parameters (value, name, thisArg)\n  * @param   Boolean   thisArg   `this` context for callback function\n  * @return  Void\n  */\n\tforEach(callback) {\n\t\tlet thisArg = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n\n\t\tlet pairs = getHeaders(this);\n\t\tlet i = 0;\n\t\twhile (i < pairs.length) {\n\t\t\tvar _pairs$i = pairs[i];\n\t\t\tconst name = _pairs$i[0],\n\t\t\t      value = _pairs$i[1];\n\n\t\t\tcallback.call(thisArg, value, name, this);\n\t\t\tpairs = getHeaders(this);\n\t\t\ti++;\n\t\t}\n\t}\n\n\t/**\n  * Overwrite header values given name\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tset(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tthis[MAP][key !== undefined ? key : name] = [value];\n\t}\n\n\t/**\n  * Append a value onto existing header\n  *\n  * @param   String  name   Header name\n  * @param   String  value  Header value\n  * @return  Void\n  */\n\tappend(name, value) {\n\t\tname = `${name}`;\n\t\tvalue = `${value}`;\n\t\tvalidateName(name);\n\t\tvalidateValue(value);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tthis[MAP][key].push(value);\n\t\t} else {\n\t\t\tthis[MAP][name] = [value];\n\t\t}\n\t}\n\n\t/**\n  * Check for header name existence\n  *\n  * @param   String   name  Header name\n  * @return  Boolean\n  */\n\thas(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\treturn find(this[MAP], name) !== undefined;\n\t}\n\n\t/**\n  * Delete all header values given name\n  *\n  * @param   String  name  Header name\n  * @return  Void\n  */\n\tdelete(name) {\n\t\tname = `${name}`;\n\t\tvalidateName(name);\n\t\tconst key = find(this[MAP], name);\n\t\tif (key !== undefined) {\n\t\t\tdelete this[MAP][key];\n\t\t}\n\t}\n\n\t/**\n  * Return raw headers (non-spec api)\n  *\n  * @return  Object\n  */\n\traw() {\n\t\treturn this[MAP];\n\t}\n\n\t/**\n  * Get an iterator on keys.\n  *\n  * @return  Iterator\n  */\n\tkeys() {\n\t\treturn createHeadersIterator(this, 'key');\n\t}\n\n\t/**\n  * Get an iterator on values.\n  *\n  * @return  Iterator\n  */\n\tvalues() {\n\t\treturn createHeadersIterator(this, 'value');\n\t}\n\n\t/**\n  * Get an iterator on entries.\n  *\n  * This is the default iterator of the Headers object.\n  *\n  * @return  Iterator\n  */\n\t[Symbol.iterator]() {\n\t\treturn createHeadersIterator(this, 'key+value');\n\t}\n}\nHeaders.prototype.entries = Headers.prototype[Symbol.iterator];\n\nObject.defineProperty(Headers.prototype, Symbol.toStringTag, {\n\tvalue: 'Headers',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Headers.prototype, {\n\tget: { enumerable: true },\n\tforEach: { enumerable: true },\n\tset: { enumerable: true },\n\tappend: { enumerable: true },\n\thas: { enumerable: true },\n\tdelete: { enumerable: true },\n\tkeys: { enumerable: true },\n\tvalues: { enumerable: true },\n\tentries: { enumerable: true }\n});\n\nfunction getHeaders(headers) {\n\tlet kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'key+value';\n\n\tconst keys = Object.keys(headers[MAP]).sort();\n\treturn keys.map(kind === 'key' ? function (k) {\n\t\treturn k.toLowerCase();\n\t} : kind === 'value' ? function (k) {\n\t\treturn headers[MAP][k].join(', ');\n\t} : function (k) {\n\t\treturn [k.toLowerCase(), headers[MAP][k].join(', ')];\n\t});\n}\n\nconst INTERNAL = Symbol('internal');\n\nfunction createHeadersIterator(target, kind) {\n\tconst iterator = Object.create(HeadersIteratorPrototype);\n\titerator[INTERNAL] = {\n\t\ttarget,\n\t\tkind,\n\t\tindex: 0\n\t};\n\treturn iterator;\n}\n\nconst HeadersIteratorPrototype = Object.setPrototypeOf({\n\tnext() {\n\t\t// istanbul ignore if\n\t\tif (!this || Object.getPrototypeOf(this) !== HeadersIteratorPrototype) {\n\t\t\tthrow new TypeError('Value of `this` is not a HeadersIterator');\n\t\t}\n\n\t\tvar _INTERNAL = this[INTERNAL];\n\t\tconst target = _INTERNAL.target,\n\t\t      kind = _INTERNAL.kind,\n\t\t      index = _INTERNAL.index;\n\n\t\tconst values = getHeaders(target, kind);\n\t\tconst len = values.length;\n\t\tif (index >= len) {\n\t\t\treturn {\n\t\t\t\tvalue: undefined,\n\t\t\t\tdone: true\n\t\t\t};\n\t\t}\n\n\t\tthis[INTERNAL].index = index + 1;\n\n\t\treturn {\n\t\t\tvalue: values[index],\n\t\t\tdone: false\n\t\t};\n\t}\n}, Object.getPrototypeOf(Object.getPrototypeOf([][Symbol.iterator]())));\n\nObject.defineProperty(HeadersIteratorPrototype, Symbol.toStringTag, {\n\tvalue: 'HeadersIterator',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\n/**\n * Export the Headers object in a form that Node.js can consume.\n *\n * @param   Headers  headers\n * @return  Object\n */\nfunction exportNodeCompatibleHeaders(headers) {\n\tconst obj = Object.assign({ __proto__: null }, headers[MAP]);\n\n\t// http.request() only supports string as Host header. This hack makes\n\t// specifying custom Host header possible.\n\tconst hostHeaderKey = find(headers[MAP], 'Host');\n\tif (hostHeaderKey !== undefined) {\n\t\tobj[hostHeaderKey] = obj[hostHeaderKey][0];\n\t}\n\n\treturn obj;\n}\n\n/**\n * Create a Headers object from an object of headers, ignoring those that do\n * not conform to HTTP grammar productions.\n *\n * @param   Object  obj  Object of headers\n * @return  Headers\n */\nfunction createHeadersLenient(obj) {\n\tconst headers = new Headers();\n\tfor (const name of Object.keys(obj)) {\n\t\tif (invalidTokenRegex.test(name)) {\n\t\t\tcontinue;\n\t\t}\n\t\tif (Array.isArray(obj[name])) {\n\t\t\tfor (const val of obj[name]) {\n\t\t\t\tif (invalidHeaderCharRegex.test(val)) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tif (headers[MAP][name] === undefined) {\n\t\t\t\t\theaders[MAP][name] = [val];\n\t\t\t\t} else {\n\t\t\t\t\theaders[MAP][name].push(val);\n\t\t\t\t}\n\t\t\t}\n\t\t} else if (!invalidHeaderCharRegex.test(obj[name])) {\n\t\t\theaders[MAP][name] = [obj[name]];\n\t\t}\n\t}\n\treturn headers;\n}\n\nconst INTERNALS$1 = Symbol('Response internals');\n\n// fix an issue where \"STATUS_CODES\" aren't a named export for node <10\nconst STATUS_CODES = http.STATUS_CODES;\n\n/**\n * Response class\n *\n * @param   Stream  body  Readable stream\n * @param   Object  opts  Response options\n * @return  Void\n */\nclass Response {\n\tconstructor() {\n\t\tlet body = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\t\tlet opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tBody.call(this, body, opts);\n\n\t\tconst status = opts.status || 200;\n\t\tconst headers = new Headers(opts.headers);\n\n\t\tif (body != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(body);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tthis[INTERNALS$1] = {\n\t\t\turl: opts.url,\n\t\t\tstatus,\n\t\t\tstatusText: opts.statusText || STATUS_CODES[status],\n\t\t\theaders,\n\t\t\tcounter: opts.counter\n\t\t};\n\t}\n\n\tget url() {\n\t\treturn this[INTERNALS$1].url || '';\n\t}\n\n\tget status() {\n\t\treturn this[INTERNALS$1].status;\n\t}\n\n\t/**\n  * Convenience property representing if the request ended normally\n  */\n\tget ok() {\n\t\treturn this[INTERNALS$1].status >= 200 && this[INTERNALS$1].status < 300;\n\t}\n\n\tget redirected() {\n\t\treturn this[INTERNALS$1].counter > 0;\n\t}\n\n\tget statusText() {\n\t\treturn this[INTERNALS$1].statusText;\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$1].headers;\n\t}\n\n\t/**\n  * Clone this response\n  *\n  * @return  Response\n  */\n\tclone() {\n\t\treturn new Response(clone(this), {\n\t\t\turl: this.url,\n\t\t\tstatus: this.status,\n\t\t\tstatusText: this.statusText,\n\t\t\theaders: this.headers,\n\t\t\tok: this.ok,\n\t\t\tredirected: this.redirected\n\t\t});\n\t}\n}\n\nBody.mixIn(Response.prototype);\n\nObject.defineProperties(Response.prototype, {\n\turl: { enumerable: true },\n\tstatus: { enumerable: true },\n\tok: { enumerable: true },\n\tredirected: { enumerable: true },\n\tstatusText: { enumerable: true },\n\theaders: { enumerable: true },\n\tclone: { enumerable: true }\n});\n\nObject.defineProperty(Response.prototype, Symbol.toStringTag, {\n\tvalue: 'Response',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nconst INTERNALS$2 = Symbol('Request internals');\n\n// fix an issue where \"format\", \"parse\" aren't a named export for node <10\nconst parse_url = Url.parse;\nconst format_url = Url.format;\n\nconst streamDestructionSupported = 'destroy' in Stream.Readable.prototype;\n\n/**\n * Check if a value is an instance of Request.\n *\n * @param   Mixed   input\n * @return  Boolean\n */\nfunction isRequest(input) {\n\treturn typeof input === 'object' && typeof input[INTERNALS$2] === 'object';\n}\n\nfunction isAbortSignal(signal) {\n\tconst proto = signal && typeof signal === 'object' && Object.getPrototypeOf(signal);\n\treturn !!(proto && proto.constructor.name === 'AbortSignal');\n}\n\n/**\n * Request class\n *\n * @param   Mixed   input  Url or Request instance\n * @param   Object  init   Custom options\n * @return  Void\n */\nclass Request {\n\tconstructor(input) {\n\t\tlet init = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n\t\tlet parsedURL;\n\n\t\t// normalize input\n\t\tif (!isRequest(input)) {\n\t\t\tif (input && input.href) {\n\t\t\t\t// in order to support Node.js' Url objects; though WHATWG's URL objects\n\t\t\t\t// will fall into this branch also (since their `toString()` will return\n\t\t\t\t// `href` property anyway)\n\t\t\t\tparsedURL = parse_url(input.href);\n\t\t\t} else {\n\t\t\t\t// coerce input to a string before attempting to parse\n\t\t\t\tparsedURL = parse_url(`${input}`);\n\t\t\t}\n\t\t\tinput = {};\n\t\t} else {\n\t\t\tparsedURL = parse_url(input.url);\n\t\t}\n\n\t\tlet method = init.method || input.method || 'GET';\n\t\tmethod = method.toUpperCase();\n\n\t\tif ((init.body != null || isRequest(input) && input.body !== null) && (method === 'GET' || method === 'HEAD')) {\n\t\t\tthrow new TypeError('Request with GET/HEAD method cannot have body');\n\t\t}\n\n\t\tlet inputBody = init.body != null ? init.body : isRequest(input) && input.body !== null ? clone(input) : null;\n\n\t\tBody.call(this, inputBody, {\n\t\t\ttimeout: init.timeout || input.timeout || 0,\n\t\t\tsize: init.size || input.size || 0\n\t\t});\n\n\t\tconst headers = new Headers(init.headers || input.headers || {});\n\n\t\tif (inputBody != null && !headers.has('Content-Type')) {\n\t\t\tconst contentType = extractContentType(inputBody);\n\t\t\tif (contentType) {\n\t\t\t\theaders.append('Content-Type', contentType);\n\t\t\t}\n\t\t}\n\n\t\tlet signal = isRequest(input) ? input.signal : null;\n\t\tif ('signal' in init) signal = init.signal;\n\n\t\tif (signal != null && !isAbortSignal(signal)) {\n\t\t\tthrow new TypeError('Expected signal to be an instanceof AbortSignal');\n\t\t}\n\n\t\tthis[INTERNALS$2] = {\n\t\t\tmethod,\n\t\t\tredirect: init.redirect || input.redirect || 'follow',\n\t\t\theaders,\n\t\t\tparsedURL,\n\t\t\tsignal\n\t\t};\n\n\t\t// node-fetch-only options\n\t\tthis.follow = init.follow !== undefined ? init.follow : input.follow !== undefined ? input.follow : 20;\n\t\tthis.compress = init.compress !== undefined ? init.compress : input.compress !== undefined ? input.compress : true;\n\t\tthis.counter = init.counter || input.counter || 0;\n\t\tthis.agent = init.agent || input.agent;\n\t}\n\n\tget method() {\n\t\treturn this[INTERNALS$2].method;\n\t}\n\n\tget url() {\n\t\treturn format_url(this[INTERNALS$2].parsedURL);\n\t}\n\n\tget headers() {\n\t\treturn this[INTERNALS$2].headers;\n\t}\n\n\tget redirect() {\n\t\treturn this[INTERNALS$2].redirect;\n\t}\n\n\tget signal() {\n\t\treturn this[INTERNALS$2].signal;\n\t}\n\n\t/**\n  * Clone this request\n  *\n  * @return  Request\n  */\n\tclone() {\n\t\treturn new Request(this);\n\t}\n}\n\nBody.mixIn(Request.prototype);\n\nObject.defineProperty(Request.prototype, Symbol.toStringTag, {\n\tvalue: 'Request',\n\twritable: false,\n\tenumerable: false,\n\tconfigurable: true\n});\n\nObject.defineProperties(Request.prototype, {\n\tmethod: { enumerable: true },\n\turl: { enumerable: true },\n\theaders: { enumerable: true },\n\tredirect: { enumerable: true },\n\tclone: { enumerable: true },\n\tsignal: { enumerable: true }\n});\n\n/**\n * Convert a Request to Node.js http request options.\n *\n * @param   Request  A Request instance\n * @return  Object   The options object to be passed to http.request\n */\nfunction getNodeRequestOptions(request) {\n\tconst parsedURL = request[INTERNALS$2].parsedURL;\n\tconst headers = new Headers(request[INTERNALS$2].headers);\n\n\t// fetch step 1.3\n\tif (!headers.has('Accept')) {\n\t\theaders.set('Accept', '*/*');\n\t}\n\n\t// Basic fetch\n\tif (!parsedURL.protocol || !parsedURL.hostname) {\n\t\tthrow new TypeError('Only absolute URLs are supported');\n\t}\n\n\tif (!/^https?:$/.test(parsedURL.protocol)) {\n\t\tthrow new TypeError('Only HTTP(S) protocols are supported');\n\t}\n\n\tif (request.signal && request.body instanceof Stream.Readable && !streamDestructionSupported) {\n\t\tthrow new Error('Cancellation of streamed requests with AbortSignal is not supported in node < 8');\n\t}\n\n\t// HTTP-network-or-cache fetch steps 2.4-2.7\n\tlet contentLengthValue = null;\n\tif (request.body == null && /^(POST|PUT)$/i.test(request.method)) {\n\t\tcontentLengthValue = '0';\n\t}\n\tif (request.body != null) {\n\t\tconst totalBytes = getTotalBytes(request);\n\t\tif (typeof totalBytes === 'number') {\n\t\t\tcontentLengthValue = String(totalBytes);\n\t\t}\n\t}\n\tif (contentLengthValue) {\n\t\theaders.set('Content-Length', contentLengthValue);\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.11\n\tif (!headers.has('User-Agent')) {\n\t\theaders.set('User-Agent', 'node-fetch/1.0 (+https://github.com/bitinn/node-fetch)');\n\t}\n\n\t// HTTP-network-or-cache fetch step 2.15\n\tif (request.compress && !headers.has('Accept-Encoding')) {\n\t\theaders.set('Accept-Encoding', 'gzip,deflate');\n\t}\n\n\tlet agent = request.agent;\n\tif (typeof agent === 'function') {\n\t\tagent = agent(parsedURL);\n\t}\n\n\tif (!headers.has('Connection') && !agent) {\n\t\theaders.set('Connection', 'close');\n\t}\n\n\t// HTTP-network fetch step 4.2\n\t// chunked encoding is handled by Node.js\n\n\treturn Object.assign({}, parsedURL, {\n\t\tmethod: request.method,\n\t\theaders: exportNodeCompatibleHeaders(headers),\n\t\tagent\n\t});\n}\n\n/**\n * abort-error.js\n *\n * AbortError interface for cancelled requests\n */\n\n/**\n * Create AbortError instance\n *\n * @param   String      message      Error message for human\n * @return  AbortError\n */\nfunction AbortError(message) {\n  Error.call(this, message);\n\n  this.type = 'aborted';\n  this.message = message;\n\n  // hide custom error implementation details from end-users\n  Error.captureStackTrace(this, this.constructor);\n}\n\nAbortError.prototype = Object.create(Error.prototype);\nAbortError.prototype.constructor = AbortError;\nAbortError.prototype.name = 'AbortError';\n\n// fix an issue where \"PassThrough\", \"resolve\" aren't a named export for node <10\nconst PassThrough$1 = Stream.PassThrough;\nconst resolve_url = Url.resolve;\n\n/**\n * Fetch function\n *\n * @param   Mixed    url   Absolute url or Request instance\n * @param   Object   opts  Fetch options\n * @return  Promise\n */\nfunction fetch(url, opts) {\n\n\t// allow custom promise\n\tif (!fetch.Promise) {\n\t\tthrow new Error('native promise missing, set fetch.Promise to your favorite alternative');\n\t}\n\n\tBody.Promise = fetch.Promise;\n\n\t// wrap http.request into fetch\n\treturn new fetch.Promise(function (resolve, reject) {\n\t\t// build request object\n\t\tconst request = new Request(url, opts);\n\t\tconst options = getNodeRequestOptions(request);\n\n\t\tconst send = (options.protocol === 'https:' ? https : http).request;\n\t\tconst signal = request.signal;\n\n\t\tlet response = null;\n\n\t\tconst abort = function abort() {\n\t\t\tlet error = new AbortError('The user aborted a request.');\n\t\t\treject(error);\n\t\t\tif (request.body && request.body instanceof Stream.Readable) {\n\t\t\t\trequest.body.destroy(error);\n\t\t\t}\n\t\t\tif (!response || !response.body) return;\n\t\t\tresponse.body.emit('error', error);\n\t\t};\n\n\t\tif (signal && signal.aborted) {\n\t\t\tabort();\n\t\t\treturn;\n\t\t}\n\n\t\tconst abortAndFinalize = function abortAndFinalize() {\n\t\t\tabort();\n\t\t\tfinalize();\n\t\t};\n\n\t\t// send request\n\t\tconst req = send(options);\n\t\tlet reqTimeout;\n\n\t\tif (signal) {\n\t\t\tsignal.addEventListener('abort', abortAndFinalize);\n\t\t}\n\n\t\tfunction finalize() {\n\t\t\treq.abort();\n\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\tclearTimeout(reqTimeout);\n\t\t}\n\n\t\tif (request.timeout) {\n\t\t\treq.once('socket', function (socket) {\n\t\t\t\treqTimeout = setTimeout(function () {\n\t\t\t\t\treject(new FetchError(`network timeout at: ${request.url}`, 'request-timeout'));\n\t\t\t\t\tfinalize();\n\t\t\t\t}, request.timeout);\n\t\t\t});\n\t\t}\n\n\t\treq.on('error', function (err) {\n\t\t\treject(new FetchError(`request to ${request.url} failed, reason: ${err.message}`, 'system', err));\n\t\t\tfinalize();\n\t\t});\n\n\t\treq.on('response', function (res) {\n\t\t\tclearTimeout(reqTimeout);\n\n\t\t\tconst headers = createHeadersLenient(res.headers);\n\n\t\t\t// HTTP fetch step 5\n\t\t\tif (fetch.isRedirect(res.statusCode)) {\n\t\t\t\t// HTTP fetch step 5.2\n\t\t\t\tconst location = headers.get('Location');\n\n\t\t\t\t// HTTP fetch step 5.3\n\t\t\t\tconst locationURL = location === null ? null : resolve_url(request.url, location);\n\n\t\t\t\t// HTTP fetch step 5.5\n\t\t\t\tswitch (request.redirect) {\n\t\t\t\t\tcase 'error':\n\t\t\t\t\t\treject(new FetchError(`uri requested responds with a redirect, redirect mode is set to error: ${request.url}`, 'no-redirect'));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t\tcase 'manual':\n\t\t\t\t\t\t// node-fetch-specific step: make manual redirect a bit easier to use by setting the Location header value to the resolved URL.\n\t\t\t\t\t\tif (locationURL !== null) {\n\t\t\t\t\t\t\t// handle corrupted header\n\t\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\t\theaders.set('Location', locationURL);\n\t\t\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t\t\t// istanbul ignore next: nodejs server prevent invalid response headers, we can't test this through normal request\n\t\t\t\t\t\t\t\treject(err);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'follow':\n\t\t\t\t\t\t// HTTP-redirect fetch step 2\n\t\t\t\t\t\tif (locationURL === null) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 5\n\t\t\t\t\t\tif (request.counter >= request.follow) {\n\t\t\t\t\t\t\treject(new FetchError(`maximum redirect reached at: ${request.url}`, 'max-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 6 (counter increment)\n\t\t\t\t\t\t// Create a new Request object.\n\t\t\t\t\t\tconst requestOpts = {\n\t\t\t\t\t\t\theaders: new Headers(request.headers),\n\t\t\t\t\t\t\tfollow: request.follow,\n\t\t\t\t\t\t\tcounter: request.counter + 1,\n\t\t\t\t\t\t\tagent: request.agent,\n\t\t\t\t\t\t\tcompress: request.compress,\n\t\t\t\t\t\t\tmethod: request.method,\n\t\t\t\t\t\t\tbody: request.body,\n\t\t\t\t\t\t\tsignal: request.signal,\n\t\t\t\t\t\t\ttimeout: request.timeout,\n\t\t\t\t\t\t\tsize: request.size\n\t\t\t\t\t\t};\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 9\n\t\t\t\t\t\tif (res.statusCode !== 303 && request.body && getTotalBytes(request) === null) {\n\t\t\t\t\t\t\treject(new FetchError('Cannot follow redirect with body being a readable stream', 'unsupported-redirect'));\n\t\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 11\n\t\t\t\t\t\tif (res.statusCode === 303 || (res.statusCode === 301 || res.statusCode === 302) && request.method === 'POST') {\n\t\t\t\t\t\t\trequestOpts.method = 'GET';\n\t\t\t\t\t\t\trequestOpts.body = undefined;\n\t\t\t\t\t\t\trequestOpts.headers.delete('content-length');\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// HTTP-redirect fetch step 15\n\t\t\t\t\t\tresolve(fetch(new Request(locationURL, requestOpts)));\n\t\t\t\t\t\tfinalize();\n\t\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// prepare response\n\t\t\tres.once('end', function () {\n\t\t\t\tif (signal) signal.removeEventListener('abort', abortAndFinalize);\n\t\t\t});\n\t\t\tlet body = res.pipe(new PassThrough$1());\n\n\t\t\tconst response_options = {\n\t\t\t\turl: request.url,\n\t\t\t\tstatus: res.statusCode,\n\t\t\t\tstatusText: res.statusMessage,\n\t\t\t\theaders: headers,\n\t\t\t\tsize: request.size,\n\t\t\t\ttimeout: request.timeout,\n\t\t\t\tcounter: request.counter\n\t\t\t};\n\n\t\t\t// HTTP-network fetch step 12.1.1.3\n\t\t\tconst codings = headers.get('Content-Encoding');\n\n\t\t\t// HTTP-network fetch step 12.1.1.4: handle content codings\n\n\t\t\t// in following scenarios we ignore compression support\n\t\t\t// 1. compression support is disabled\n\t\t\t// 2. HEAD request\n\t\t\t// 3. no Content-Encoding header\n\t\t\t// 4. no content response (204)\n\t\t\t// 5. content not modified response (304)\n\t\t\tif (!request.compress || request.method === 'HEAD' || codings === null || res.statusCode === 204 || res.statusCode === 304) {\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// For Node v6+\n\t\t\t// Be less strict when decoding compressed responses, since sometimes\n\t\t\t// servers send slightly invalid responses that are still accepted\n\t\t\t// by common browsers.\n\t\t\t// Always using Z_SYNC_FLUSH is what cURL does.\n\t\t\tconst zlibOptions = {\n\t\t\t\tflush: zlib.Z_SYNC_FLUSH,\n\t\t\t\tfinishFlush: zlib.Z_SYNC_FLUSH\n\t\t\t};\n\n\t\t\t// for gzip\n\t\t\tif (codings == 'gzip' || codings == 'x-gzip') {\n\t\t\t\tbody = body.pipe(zlib.createGunzip(zlibOptions));\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for deflate\n\t\t\tif (codings == 'deflate' || codings == 'x-deflate') {\n\t\t\t\t// handle the infamous raw deflate response from old servers\n\t\t\t\t// a hack for old IIS and Apache servers\n\t\t\t\tconst raw = res.pipe(new PassThrough$1());\n\t\t\t\traw.once('data', function (chunk) {\n\t\t\t\t\t// see http://stackoverflow.com/questions/37519828\n\t\t\t\t\tif ((chunk[0] & 0x0F) === 0x08) {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflate());\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbody = body.pipe(zlib.createInflateRaw());\n\t\t\t\t\t}\n\t\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\t\tresolve(response);\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// for br\n\t\t\tif (codings == 'br' && typeof zlib.createBrotliDecompress === 'function') {\n\t\t\t\tbody = body.pipe(zlib.createBrotliDecompress());\n\t\t\t\tresponse = new Response(body, response_options);\n\t\t\t\tresolve(response);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// otherwise, use response as-is\n\t\t\tresponse = new Response(body, response_options);\n\t\t\tresolve(response);\n\t\t});\n\n\t\twriteToStream(req, request);\n\t});\n}\n/**\n * Redirect code matching\n *\n * @param   Number   code  Status code\n * @return  Boolean\n */\nfetch.isRedirect = function (code) {\n\treturn code === 301 || code === 302 || code === 303 || code === 307 || code === 308;\n};\n\n// expose Promise\nfetch.Promise = global.Promise;\n\nmodule.exports = exports = fetch;\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = exports;\nexports.Headers = Headers;\nexports.Request = Request;\nexports.Response = Response;\nexports.FetchError = FetchError;\n","var wrappy = require('wrappy')\nmodule.exports = wrappy(once)\nmodule.exports.strict = wrappy(onceStrict)\n\nonce.proto = once(function () {\n  Object.defineProperty(Function.prototype, 'once', {\n    value: function () {\n      return once(this)\n    },\n    configurable: true\n  })\n\n  Object.defineProperty(Function.prototype, 'onceStrict', {\n    value: function () {\n      return onceStrict(this)\n    },\n    configurable: true\n  })\n})\n\nfunction once (fn) {\n  var f = function () {\n    if (f.called) return f.value\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  f.called = false\n  return f\n}\n\nfunction onceStrict (fn) {\n  var f = function () {\n    if (f.called)\n      throw new Error(f.onceError)\n    f.called = true\n    return f.value = fn.apply(this, arguments)\n  }\n  var name = fn.name || 'Function wrapped with `once`'\n  f.onceError = name + \" shouldn't be called more than once\"\n  f.called = false\n  return f\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction getUserAgent() {\n  if (typeof navigator === \"object\" && \"userAgent\" in navigator) {\n    return navigator.userAgent;\n  }\n\n  if (typeof process === \"object\" && \"version\" in process) {\n    return `Node.js/${process.version.substr(1)} (${process.platform}; ${process.arch})`;\n  }\n\n  return \"<environment undetectable>\";\n}\n\nexports.getUserAgent = getUserAgent;\n//# sourceMappingURL=index.js.map\n","// Returns a wrapper function that returns a wrapped callback\n// The wrapper function should do some stuff, and return a\n// presumably different callback function.\n// This makes sure that own properties are retained, so that\n// decorations and such are not lost along the way.\nmodule.exports = wrappy\nfunction wrappy (fn, cb) {\n  if (fn && cb) return wrappy(fn)(cb)\n\n  if (typeof fn !== 'function')\n    throw new TypeError('need wrapper function')\n\n  Object.keys(fn).forEach(function (k) {\n    wrapper[k] = fn[k]\n  })\n\n  return wrapper\n\n  function wrapper() {\n    var args = new Array(arguments.length)\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i]\n    }\n    var ret = fn.apply(this, args)\n    var cb = args[args.length-1]\n    if (typeof ret === 'function' && ret !== cb) {\n      Object.keys(cb).forEach(function (k) {\n        ret[k] = cb[k]\n      })\n    }\n    return ret\n  }\n}\n",null,"module.exports = require(\"fs\");","module.exports = require(\"http\");","module.exports = require(\"https\");","module.exports = require(\"os\");","module.exports = require(\"path\");","module.exports = require(\"stream\");","module.exports = require(\"url\");","module.exports = require(\"zlib\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tif(__webpack_module_cache__[moduleId]) {\n\t\treturn __webpack_module_cache__[moduleId].exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\n__webpack_require__.ab = __dirname + \"/\";","// module exports must be returned from runtime so entry inlining is disabled\n// startup\n// Load entry module and return exports\nreturn __webpack_require__(932);\n"]}